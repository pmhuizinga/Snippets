use mongo compass for GUI
use mongo atlas for the cloud version
use pymongo python library
info from: https://www.youtube.com/watch?v=-56x56UppqQ

# install database
www.mongodb.com
install on c:/mongodb
create c:/mongodb/data/db/
craete c:/mongodb/log

open cmd
mongodb/bin> mongodb --directoryperdb --dbpath c:\mongodb\data\db --logpath c:\mongodb\log\mongo.log --logappend --rest --install
mongodb/bin>net start mongodb

# go to mongo shell
mongodb/bin>mongo
cls (clears all, new screen. not necessary)

# DATABASE ACTIONS
show databases: > show dbs
create database: > use dbname
view current db: > db
drop database: > db.dropDatabase()
exit > exit
PYTHON
create database: 
  myclient = pymongo.MongoClient("mongodb://localhost:27017/")
  db = myclient['database_name'] 

# SETTINGS ACTIONS
create user:
>db.createUser {
  user.: "Paul",
  pwd: "1234",
  roles: ["readWrite", "dbAdmin"]
};

# COLLECTION ACTIONS
create collection: >db.createCollection('customers')
show collections: >show collections
PYTHON
mycol = db["customers"]

# RECORD ACTIONS:
# CREATE
create: >db.customers.create({first_name: "paul", last_name: "huizinga"});
insert date: >db.collection.insert({date: Date()})
Insert relation: >db.collection.insert({user: {first_name: 'paul', last_name: 'huizinga'}})
insert multiple: >db.collection.insertMany([{item 1}, {item 2}])

# READ
find all itmes: >db.customers.find().pretty() (pretty makes it better readable)
find where: >db.customers.find({firstname: 'paul'})
find sort: >db.customers.find().sort({firstname: 1}).pretty() (sort 1 = ascending, -1 = descending)
find count: >db.customers.find().count()
find limit: >db.customers.find().limit(2)
find for each: >db.collection.find().forEach(function(doc) {print('Hello: ' + doc.first_name)})
find single record: >db.collection.findOne({first_name: 'paul'})
find by property in list: >db.collection.find({comments: {$eleMatch(: {first_name: 'paul'}}})
text search by specific property: 
  create index: db.collection.createIndex({first_name: 'text'})
  then find: >db.collection.find({$text: {$search: "\"aul\"" }})
find greater then: >db.collection.find({age: {$gt: 30}})
find greater then or equal to: >db.collection.find({age: {$gte: 30}})
find less then: >db.collection.find({age: {$lt: 30}})
find less then or equal to: >db.collection.find({age: {$lte: 30}})
# UPDATE
update entire record, create new if not exists: >db.collection.upate({first_name: 'paul'}), {first_name: 'paul', last_name: 'huizinga'},{upsert: true})
update record, keep existing properties: >db.collection.update({first_name: 'paul}, {$set: {gender: 'male}})
increment: db.collection.update({first_name: 'paul'}, { $inc:{age: 1}})
rename property: >db.collection.update({first_name: 'paul'}, {$rename: {age: 'leeftijd'}})

# DELETE
remove where: >db.collection.remove({first_name: 'paul'})

